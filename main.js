!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=function(){return e=function e(t,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._cardTemplate=document.querySelector(".template__card"),this._card=this._getTemplate(),this._handleLikeCard=r,this._handleUnlikeCard=o,this._handleCardClick=i,this._likes=t.likes,this._owner=t.owner,this._userId=n,this._cardId=t._id,this._handleDeleteCard=u},(n=[{key:"_getTemplate",value:function(){return this._cardTemplate.cloneNode(!0).content.querySelector(".card")}},{key:"_setProperties",value:function(){var e=this;this._cardImage=this._card.querySelector(".card__image"),this._cardTitle=this._card.querySelector(".card__title"),this._likeButton=this._card.querySelector(".card__icon_type_like"),this._likeCounter=this._card.querySelector(".card__like-number"),this._likeCounter.textContent=this._likes.length,this._deleteButton=this._card.querySelector(".card__icon_type_delete"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._likes.some((function(t){return t._id===e._userId}))&&this._likeButton.classList.toggle("card__icon_type_like-active"),console.log(this._owner._id,this._userId),this._owner._id!==this._userId&&this._deleteButton.remove(),this._card.id="id_".concat(this._cardId)}},{key:"_handleDeleteCard",value:function(){this._card.remove()}},{key:"_changeLikeCounter",value:function(e){this._likes=e,this._likeCounter.textContent=e.length}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._likes.some((function(t){return t._id===e._userId}))?(e._handleUnlikeCard(e._cardId).then((function(t){e._changeLikeCounter(t.likes)})),e._likeButton.classList.toggle("card__icon_type_like-active")):(e._handleLikeCard(e._cardId).then((function(t){e._changeLikeCounter(t.likes)})),e._likeButton.classList.toggle("card__icon_type_like-active"))})),this._deleteButton.addEventListener("click",(function(){e._handleDeleteCard(e._cardId)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._link,e._name)}))}},{key:"createCard",value:function(){return this._setProperties(),this._setEventListeners(),this._card}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,u(r.key),r)}}function u(e){var t=function(e){if("object"!=o(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==o(t)?t:t+""}var a=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n},(t=[{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._formElement.addEventListener("reset",(function(){e._toggleButtonState()}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._buttonElement.classList.add(this._config.inactiveButtonClass):this._buttonElement.classList.remove(this._config.inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.classList.add(this._config.inputErrorMessageClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.inputErrorMessageClass),t.textContent=" "}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&i(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,s(r.key),r)}}function s(e){var t=function(e){if("object"!=c(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}var f=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".popup__button-close"),this._handleEscapeKey=this._handleEscapeKey.bind(this)},t=[{key:"handleOpen",value:function(){this._popupElement.classList.add("popup__show"),document.addEventListener("keydown",this._handleEscapeKey)}},{key:"handleClose",value:function(){this._popupElement.classList.remove("popup__show")}},{key:"_handleEscapeKey",value:function(e){"Escape"===e.key&&this.handleClose()}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.handleClose()})),this._popupElement.addEventListener("click",(function(t){"popup popup__show"===t.target.className&&e.handleClose()}))}}],t&&l(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,d(r.key),r)}}function d(e){var t=function(e){if("object"!=p(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==p(t)?t:t+""}function h(e,t,n){return t=b(t),function(e,t){if(t&&("object"==p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,m()?Reflect.construct(t,n||[],b(e).constructor):t.apply(e,n))}function m(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(m=function(){return!!e})()}function _(e,t,n,r){var o=v(b(1&r?e.prototype:e),t,n);return 2&r&&"function"==typeof o?function(e){return o.apply(n,e)}:o}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(null,arguments)}function b(e){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},b(e)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}var S=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=h(this,t,[e]))._handleFormSubmit=n,r._formElement=r._popupElement.querySelector(".popup__form"),r._inputList=Array.from(r._formElement.querySelectorAll(".popup__form-input")),r._formButton=r._popupElement.querySelector(".popup__form-button"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(t,e),n=t,r=[{key:"_getInputValues",value:function(){var e=this;return this.formValues={},this._inputList.forEach((function(t){e.formValues[t.name]=t.value})),this.formValues}},{key:"handleOpen",value:function(e,n){this._formButton.textContent="Guardar",_(t,"handleOpen",this,3)([]),this._inputList[0].value=e||"",this._inputList[1]&&(this._inputList[1].value=n||"")}},{key:"handleClose",value:function(){_(t,"handleClose",this,3)([]),this._formElement.reset()}},{key:"setEventListeners",value:function(){var e=this;_(t,"setEventListeners",this,3)([]),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._formButton.textContent="Guardando...",e._handleFormSubmit(e._getInputValues(),(function(){return e.handleClose()}))}))}}],r&&y(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(f);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,w(r.key),r)}}function w(e){var t=function(e){if("object"!=k(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==k(t)?t:t+""}function j(e,t,n){return t=P(t),function(e,t){if(t&&("object"==k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,O()?Reflect.construct(t,n||[],P(e).constructor):t.apply(e,n))}function O(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(O=function(){return!!e})()}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(null,arguments)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}var I=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=j(this,t,[e]))._title=n._popupElement.querySelector(".popup__subtitle"),n._image=n._popupElement.querySelector(".popup__content-image"),n.handleOpen=n.handleOpen.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(t,e),n=t,r=[{key:"handleOpen",value:function(e){var n,r,o,i=e.link,u=e.name;(n=t,r=this,"function"==typeof(o=C(P(1&3?n.prototype:n),"handleOpen",r))?function(e){return o.apply(r,e)}:o)([]),this._image.src=i,this._title.textContent=u}}],r&&E(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(f);function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,B(r.key),r)}}function B(e){var t=function(e){if("object"!=T(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=T(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==T(t)?t:t+""}function U(e,t,n){return t=V(t),function(e,t){if(t&&("object"==T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,x()?Reflect.construct(t,n||[],V(e).constructor):t.apply(e,n))}function x(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(x=function(){return!!e})()}function R(e,t,n,r){var o=D(V(1&r?e.prototype:e),t,n);return 2&r&&"function"==typeof o?function(e){return o.apply(n,e)}:o}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(null,arguments)}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}function A(e,t){return A=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},A(e,t)}var N=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=U(this,t,[e]))._handleConfirmation=n,r._formElement=r._popupElement.querySelector(".popup__form_delete-confirmation"),r.cardId="",r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&A(e,t)}(t,e),n=t,r=[{key:"setEventListeners",value:function(){var e=this;R(t,"setEventListeners",this,3)([]),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleConfirmation(e.cardId)}))}},{key:"handleOpen",value:function(e){this.cardId=e,R(t,"handleOpen",this,3)([])}},{key:"handleClose",value:function(){R(t,"handleClose",this,3)([])}}],r&&q(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(f);function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,K(r.key),r)}}function K(e){var t=function(e){if("object"!=G(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=G(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==G(t)?t:t+""}var M=function(){return e=function e(t){var n=t.nameSelector,r=t.jobSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._job=document.querySelector(r),this._avatar=document.querySelector(o)},(t=[{key:"getUserInfo",value:function(){return{userName:this._name.textContent,userJob:this._job.textContent,userAvatar:this._avatar.src,id:this._userId}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._job.textContent=e.about,e.avatar&&(this._avatar.src=e.avatar),e.id&&(this._userId=e._id)}}])&&J(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,z(r.key),r)}}function z(e){var t=function(e){if("object"!=F(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==F(t)?t:t+""}var Q=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._rendererItems=r,this._renderer=o,this._section=document.querySelector(n)},(t=[{key:"addItem",value:function(e){this._section.append(e)}},{key:"renderItems",value:function(){var e=this;this._rendererItems.forEach((function(t){e._renderer(t)}))}}])&&H(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function W(e){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},W(e)}function X(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Y(r.key),r)}}function Y(e){var t=function(e){if("object"!=W(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=W(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==W(t)?t:t+""}var Z=function(){return e=function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r},(t=[{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"editProfile",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"addCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"editAvatarProfile",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatarLink})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}}])&&X(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),$=document.querySelector(".popup__form_profile"),ee=document.querySelector(".popup__form-input_type_name"),te=document.querySelector(".popup__form-input_type_about"),ne=document.querySelector(".profile__name"),re=document.querySelector(".profile__about"),oe=document.querySelector(".profile__edit-button"),ie=document.querySelector(".profile__avatar-cointainer"),ue=document.querySelector(".popup__form_avatar-profile"),ae=document.querySelector(".cards"),ce=document.querySelector(".popup__form_cards"),le=document.querySelector(".profile__add-button"),se={formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__form-button",inactiveButtonClass:"popup__form-button_disabled",inputErrorClass:"popup__form-input_type_error",inputErrorMessageClass:"popup__form-error-message"};ee.value=ne.textContent,te.value=re.textContent;var fe=new M({nameSelector:".profile__name",jobSelector:".profile__about",avatarSelector:".profile__image"}),pe=new Z({baseUrl:"https://around.nomoreparties.co/v1/web-es-cohort-17",headers:{authorization:"aca41053-935f-4980-ab7e-41af6eea4631","Content-Type":"application/json"}});pe.getUserInfo().then((function(e){fe.setUserInfo(e),pe.getInitialCards().then((function(t){var n=new Q({items:t,renderer:function(t){var o=new r(t,e._id,(function(e){return pe.addLike(e)}),(function(e){return pe.removeLike(e)}),(function(){de.handleOpen({link:t.link,name:t.name})}),(function(){_e.handleOpen(t._id)})).createCard();n.addItem(o)}},".cards");n.renderItems()}))}));var ye=new S("#popup-cards",(function(e,t){pe.addCard(e).then((function(n){var o=new r(n,fe.getUserInfo().id,(function(e){return pe.addLike(e)}),(function(e){return pe.removeLike(e)}),(function(){return de.handleOpen(e)}),(function(){_e.handleOpen(n._id)})).createCard();ae.prepend(o),ye.handleClose,t()}))}));ye.setEventListeners();var de=new I("#popup-photo");de.setEventListeners();var he=new S("#popup-profile",(function(e,t){pe.editProfile(e).then((function(e){fe.setUserInfo(e),he.handleClose(),t()}))}));he.setEventListeners();var me=new S("#popup-avatar-profile",(function(e){pe.editAvatarProfile(e).then((function(e){fe.setUserInfo(e),me.handleClose()}))}));me.setEventListeners();var _e=new N("#popup-delete-confirmation",(function(e){pe.deleteCard(e).then((function(){_e.handleClose(),document.querySelector("#id_".concat(e)).remove()}))}));_e.setEventListeners(),oe.addEventListener("click",(function(){he.handleOpen(ne.textContent,re.textContent),new a(se,$).enableValidation()})),ie.addEventListener("click",(function(){me.handleOpen(),new a(se,ue).enableValidation()})),le.addEventListener("click",(function(){ye.handleOpen(),new a(se,ce).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,